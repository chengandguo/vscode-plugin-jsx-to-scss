{"version":3,"sources":[".././node_modules/_copy-paste@1.3.0@copy-paste/index.js",".././node_modules/_copy-paste@1.3.0@copy-paste/platform/darwin.js",".././node_modules/_copy-paste@1.3.0@copy-paste/platform/linux.js",".././node_modules/_copy-paste@1.3.0@copy-paste/platform/win32.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/encodings/dbcs-codec.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/encodings/dbcs-data.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/encodings/index.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/encodings/internal.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/encodings/sbcs-codec.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/encodings/sbcs-data-generated.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/encodings/sbcs-data.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/encodings/utf16.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/encodings/utf7.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/lib/bom-handling.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/lib/extend-node.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/lib/index.js",".././node_modules/_iconv-lite@0.4.24@iconv-lite/lib/streams.js",".././node_modules/_safer-buffer@2.1.2@safer-buffer/safer.js",".././node_modules/_sync-exec@0.6.2@sync-exec/js/lib/create-pipes.js",".././node_modules/_sync-exec@0.6.2@sync-exec/js/lib/proxy.js",".././node_modules/_sync-exec@0.6.2@sync-exec/js/lib/read-pipes.js",".././node_modules/_sync-exec@0.6.2@sync-exec/js/lib/timeout.js",".././node_modules/_sync-exec@0.6.2@sync-exec/js/sync-exec.js",".././src/extension.js",".././src/utils/jsxParser.js",".././src/utils/utils.js","../external \"buffer\"","../external \"child_process\"","../external \"fs\"","../external \"path\"","../external \"stream\"","../external \"string_decoder\"","../external \"util\"","../external \"vscode\"","../webpack/bootstrap","../webpack/startup"],"names":["config","child_process","spawn","util","execSync","cmd","stdout","e","process","platform","Error","noop","exports","copy","text","callback","child","command","args","done","apply","this","arguments","err","stdin","on","stderr","chunk","push","length","decode","pipe","output","type","Object","prototype","toString","call","inspect","depth","end","encode","pasteCommand","paste","concat","join","data","silent","noConflict","global","GLOBAL","full_command","str","Buffer","chunks","Array","isArray","iconv","vbsPath","__dirname","b64","substr","slice","_dbcs","DBCSCodec","UNASSIGNED","SEQ_START","NODE_START","UNASSIGNED_NODE","i","codecOptions","encodingName","table","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","defaultCharUnicode","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","val","j","from","to","_fillEncodeTable","encodeAdd","uChar","hasOwnProperty","_setEncodeChar","charCodeAt","defCharSB","defaultCharSingleByte","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","options","codec","leadSurrogate","seqObj","undefined","DBCSDecoder","nodeIdx","prevBuf","alloc","findIdx","l","r","mid","Math","floor","encoder","decoder","_getDecodeTrieNode","addr","bytes","node","curAddr","parseInt","writeTable","k","part","code","codeTrail","len","seq","m","charCode","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","mbCode","write","newBuf","nextChar","resCode","subtable","idx","uChars","gbChars","buf","prevBufOffset","seqStart","curByte","curSeq","ptr","uCodeLead","ret","module","modules","enc","InternalCodec","bomAware","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","res","String","fromCharCode","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","idx1","idx2","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","addBOM","getEncoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","min","utf16be","tmp","buf2","utf16","encoding","getDecoder","trail","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","replace","bind","base64Regex","base64Chars","test","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","base64IMAPChars","PrependBOMWrapper","StripBOMWrapper","pass","PrependBOM","StripBOM","stripBOM","original","supportsNodeEncodingsExtension","Uint8Array","extendNodeEncodings","console","error","nodeNativeEncodings","isNativeEncoding","toLowerCase","SlowBuffer","SlowBufferToString","start","SlowBufferWrite","string","offset","isFinite","swap","remaining","RangeError","BufferIsEncoding","isEncoding","encodingExists","BufferByteLength","byteLength","BufferToString","BufferWrite","_offset","_length","_encoding","supportsStreams","Readable","ReadableSetEncoding","setEncoding","_readableState","collect","_collect","undoExtendNodeEncodings","bomHandling","encodings","skipDecodeWarning","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecDef","key","nodeVer","versions","nodeVerArr","split","map","Number","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","create","constructor","value","_transform","_flush","cb","isBuffer","buffer","safer","Safer","encodingOrOffset","TypeError","size","fill","kStringMaxLength","binding","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","fs","timeout","created","dir","name","ref","t_limit","tmp_dir","Date","now","env","random","mkdir","_error","max_wait","orig_write","status","t0","signal","deleted","read","result","readFileSync","unlinkSync","rmdirSync","limit","msg","create_pipes","proxy","read_pipes","forceEmulation","exec","vscode","getSelectedText","extractStyle","writeToClipboard","activate","context","log","disposable","commands","registerCommand","scss","window","showErrorMessage","subscriptions","deactivate","oneObject","obj","forEach","_","voidTag","specalTag","hiddenTag","JSXParser","a","f","parse","input","getOne","rsp","lexer","breakIndex","stack","origString","origLength","last","lastNode","addNode","p","children","arr","getCloseTag","pop","nodeValue","getText","insertTbody","getOpenTag","selfClose","isVoidTag","indexOf","index","bindex","addText","makeJSX","parseCode","quote","word","braceIndex","codeIndex","nodes","escape","state","n","c","charAt","next","collectJSX","empty","chunkString","rtbody","tbody","nodeName","splice","props","match","tag","thow","leftContent","attrName","attrValue","getAttrs","closeTag","el","JSXNode","copyPaste","generateSass","spaceCount","className","classNames","trim","generateWhiteSpace","item","count","entries","cnt","editor","activeTextEditor","document","selection","line","character","showInformationMessage","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"extension.js","sourcesContent":["var child_process = require(\"child_process\");\nvar spawn = child_process.spawn;\nvar util = require(\"util\");\n\nvar execSync = (function() {\n\tif(child_process.execSync) { // Use native execSync if avaiable\n\t\treturn function(cmd) { return child_process.execSync(cmd); };\n\t} else {\n\t\ttry { // Try using fallback package if available\n\t\t\tvar execSync = require(\"sync-exec\");\n\t\t\treturn function(cmd) { return execSync(cmd).stdout; };\n\t\t} catch(e) {}\n\t}\n\n\treturn null;\n})();\n\nvar config;\n\nswitch(process.platform) {\n\tcase \"darwin\":\n\t\tconfig = require(\"./platform/darwin\");\n\t\tbreak;\n\tcase \"win32\":\n\t\tconfig = require(\"./platform/win32\");\n\t\tbreak;\n\tcase \"linux\":\n\t\tconfig = require(\"./platform/linux\");\n\t\tbreak;\n\tcase \"freebsd\":\n\t\tconfig = require(\"./platform/linux\");\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error(\"Unknown platform: '\" + process.platform + \"'.  Send this error to xavi.rmz@gmail.com.\");\n}\n\nvar noop = function() {};\n\nexports.copy = function(text, callback) {\n\tvar child = spawn(config.copy.command, config.copy.args);\n\n\tvar done = (callback ? function() { callback.apply(this, arguments); done = noop; } : noop);\n\n\tvar err = [];\n\n\tchild.stdin.on(\"error\", function (err) { done(err); });\n\tchild\n\t\t.on(\"exit\", function() { done(null, text); })\n\t\t.on(\"error\", function(err) { done(err); })\n\t\t.stderr\n\t\t\t.on(\"data\", function(chunk) { err.push(chunk); })\n\t\t\t.on(\"end\", function() {\n\t\t\t\tif(err.length === 0) { return; }\n\t\t\t\tdone(new Error(config.decode(err)));\n\t\t\t})\n\t;\n\n\tif(text.pipe) { text.pipe(child.stdin); }\n\telse {\n\t\tvar output, type = Object.prototype.toString.call(text);\n\n\t\tif(type === \"[object String]\") { output = text; }\n\t\telse if(type === \"[object Object]\") { output = util.inspect(text, { depth: null }); }\n\t\telse if(type === \"[object Array]\") { output = util.inspect(text, { depth: null }); }\n\t\telse { output = text.toString(); }\n\n\t\tchild.stdin.end(config.encode(output));\n\t}\n\n\treturn text;\n};\n\nvar pasteCommand = [ config.paste.command ].concat(config.paste.args).join(\" \");\nexports.paste = function(callback) {\n\tif(execSync && !callback) { return config.decode(execSync(pasteCommand)); }\n\telse if(callback) {\n\t\tvar child = spawn(config.paste.command, config.paste.args);\n\n\t\tvar done = callback && function() { callback.apply(this, arguments); done = noop; };\n\n\t\tvar data = [], err = [];\n\n\t\tchild.on(\"error\", function(err) { done(err); });\n\t\tchild.stdout\n\t\t\t.on(\"data\", function(chunk) { data.push(chunk); })\n\t\t\t.on(\"end\", function() { done(null, config.decode(data)); })\n\t\t;\n\t\tchild.stderr\n\t\t\t.on(\"data\", function(chunk) { err.push(chunk); })\n\t\t\t.on(\"end\", function() {\n\t\t\t\tif(err.length === 0) { return; }\n\n\t\t\t\tdone(new Error(config.decode(err)));\n\t\t\t})\n\t\t;\n\t} else {\n\t\tthrow new Error(\"A synchronous version of paste is not supported on this platform.\");\n\t}\n};\n\nexports.silent = function() {\n\tthrow new Error(\"DEPRECATED: copy-paste is now always silent.\");\n};\n\nexports.noConflict = function() {\n\tthrow new Error(\"DEPRECATED: copy-paste no longer adds global variables by default.\");\n};\nexports.global = function() {\n\tGLOBAL.copy = exports.copy;\n\tGLOBAL.paste = exports.paste;\n\n\treturn exports;\n};\n","exports.copy = { command: \"pbcopy\", args: [] };\nexports.paste = { command: \"pbpaste\", args: [] };\nexports.paste.full_command = exports.paste.command;\nexports.encode = function(str) { return new Buffer(str, \"utf8\"); };\nexports.decode = function(chunks) {\n\tif(!Array.isArray(chunks)) { chunks = [ chunks ]; }\n\n\treturn Buffer.concat(chunks).toString(\"utf8\");\n};\n","exports.copy = { command: \"xclip\", args: [ \"-selection\", \"clipboard\" ] };\nexports.paste = { command: \"xclip\", args: [ \"-selection\", \"clipboard\", \"-o\" ] };\nexports.paste.full_command = [ exports.paste.command ].concat(exports.paste.args).join(\" \");\nexports.encode = function(str) { return new Buffer(str, \"utf8\"); };\nexports.decode = function(chunks) {\n\tif(!Array.isArray(chunks)) { chunks = [ chunks ]; }\n\n\treturn Buffer.concat(chunks).toString(\"utf8\");\n};\n","var iconv = require(\"iconv-lite\");\nvar path = require(\"path\");\n\nvar vbsPath = path.join(__dirname, \".\\\\fallbacks\\\\paste.vbs\");\n\nvar paste = { command: \"cscript\", args: [ \"/Nologo\", vbsPath ] };\npaste.full_command = [ paste.command, paste.args[0], '\"'+vbsPath+'\"' ].join(\" \");\n\nexports.copy = { command: \"clip\", args: [] };\nexports.paste = paste;\n\nexports.encode = function(str) { return iconv.encode(str, \"utf16le\"); };\nexports.decode = function(chunks) {\n\tif(!Array.isArray(chunks)) { chunks = [ chunks ]; }\n\n\tvar b64 = iconv.decode(Buffer.concat(chunks), \"cp437\");\n\tb64 = b64.substr(0, b64.length - 2); // Chops off extra \"\\r\\n\"\n    \n    // remove bom and decode\n    var result = new Buffer(b64, \"base64\").slice(3).toString(\"utf-8\");\n    return result;\n};\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","// Generated by CoffeeScript 1.9.3\n(function() {\n  var fs, timeout;\n\n  fs = require('fs');\n\n  timeout = require('./timeout');\n\n  module.exports = function() {\n    var created, dir, i, len, name, ref, t_limit, tmp_dir;\n    t_limit = Date.now() + 1000;\n    tmp_dir = '/tmp';\n    ref = ['TMPDIR', 'TMP', 'TEMP'];\n    for (i = 0, len = ref.length; i < len; i++) {\n      name = ref[i];\n      if ((dir = process.env[name]) != null) {\n        tmp_dir = dir.replace(/\\/$/, '');\n      }\n    }\n    while (!created) {\n      try {\n        dir = tmp_dir + '/sync-exec-' + Math.floor(Math.random() * 1000000000);\n        fs.mkdir(dir);\n        created = true;\n      } catch (_error) {}\n      timeout(t_limit, 'Can not create sync-exec directory');\n    }\n    return dir;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.9.3\n(function() {\n  var child_process;\n\n  child_process = require('child_process');\n\n  module.exports = function(cmd, max_wait, options) {\n    var err, orig_write, status, stderr, stdout, t0;\n    options.timeout = max_wait;\n    stdout = stderr = '';\n    status = 0;\n    t0 = Date.now();\n    orig_write = process.stderr.write;\n    process.stderr.write = function() {};\n    try {\n      stdout = child_process.execSync(cmd, options);\n      process.stderr.write = orig_write;\n    } catch (_error) {\n      err = _error;\n      process.stderr.write = orig_write;\n      if (err.signal === 'SIGTERM' && t0 <= Date.now() - max_wait) {\n        throw new Error('Timeout');\n      }\n      stdout = err.stdout, stderr = err.stderr, status = err.status;\n    }\n    return {\n      stdout: stdout,\n      stderr: stderr,\n      status: status\n    };\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.9.3\n(function() {\n  var fs, timeout;\n\n  fs = require('fs');\n\n  timeout = require('./timeout');\n\n  module.exports = function(dir, max_wait) {\n    var deleted, i, len, pipe, read, ref, result, t_limit;\n    t_limit = Date.now() + max_wait;\n    while (!read) {\n      try {\n        if (fs.readFileSync(dir + '/done').length) {\n          read = true;\n        }\n      } catch (_error) {}\n      timeout(t_limit, 'Process execution timeout or exit flag read failure');\n    }\n    while (!deleted) {\n      try {\n        fs.unlinkSync(dir + '/done');\n        deleted = true;\n      } catch (_error) {}\n      timeout(t_limit, 'Can not delete exit code file');\n    }\n    result = {};\n    ref = ['stdout', 'stderr', 'status'];\n    for (i = 0, len = ref.length; i < len; i++) {\n      pipe = ref[i];\n      result[pipe] = fs.readFileSync(dir + '/' + pipe, {\n        encoding: 'utf-8'\n      });\n      read = true;\n      fs.unlinkSync(dir + '/' + pipe);\n    }\n    try {\n      fs.rmdirSync(dir);\n    } catch (_error) {}\n    result.status = Number(result.status);\n    return result;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.9.3\n(function() {\n  module.exports = function(limit, msg) {\n    if (Date.now() > limit) {\n      throw new Error(msg);\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.9.3\n(function() {\n  var child_process, create_pipes, proxy, read_pipes, timeout;\n\n  child_process = require('child_process');\n\n  create_pipes = require('./lib/create-pipes');\n\n  proxy = require('./lib/proxy');\n\n  read_pipes = require('./lib/read-pipes');\n\n  timeout = require('./lib/timeout');\n\n  module.exports = function(cmd, max_wait, options) {\n    var dir, ref;\n    if (max_wait && typeof max_wait === 'object') {\n      ref = [max_wait, null], options = ref[0], max_wait = ref[1];\n    }\n    if (options == null) {\n      options = {};\n    }\n    if (!options.hasOwnProperty('encoding')) {\n      options.encoding = 'utf8';\n    }\n    if (!(typeof options === 'object' && options)) {\n      throw new Error('options must be an object');\n    }\n    if (max_wait == null) {\n      max_wait = options.timeout || options.max_wait || 3600000;\n    }\n    if (!((max_wait == null) || max_wait >= 1)) {\n      throw new Error('`options.timeout` must be >=1 millisecond');\n    }\n    delete options.max_wait;\n    if (options.forceEmulation) {\n      delete options.forceEmulation;\n    } else if (child_process.execSync) {\n      return proxy(cmd, max_wait, options);\n    }\n    delete options.timeout;\n    dir = create_pipes();\n    cmd = '((((' + cmd + ' > ' + dir + '/stdout 2> ' + dir + '/stderr ) ' + '&& echo $? > ' + dir + '/status) || echo $? > ' + dir + '/status) &&' + ' echo 1 > ' + dir + '/done) || echo 1 > ' + dir + '/done';\n    child_process.exec(cmd, options, function() {});\n    return read_pipes(dir, max_wait);\n  };\n\n}).call(this);\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nconst vscode = require('vscode');\nconst { getSelectedText, extractStyle, writeToClipboard } = require(\"./utils/utils.js\");\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\n\n/**\n * @param {vscode.ExtensionContext} context\n */\nfunction activate(context) {\n\n  // Use the console to output diagnostic information (console.log) and errors (console.error)\n  // This line of code will only be executed once when your extension is activated\n  console.log('Congratulations, your extension \"jsx-to-scss\" is now active!');\n\n  // The command has been defined in the package.json file\n  // Now provide the implementation of the command with  registerCommand\n  // The commandId parameter must match the command field in package.json\n  let disposable = vscode.commands.registerCommand('jsx-to-scss.extract', function () {\n    let text = getSelectedText();\n    if (text) {\n      let scss = extractStyle(text);\n      if (scss) {\n        writeToClipboard(scss);\n      } else {\n        vscode.window.showErrorMessage(\"Fail to extract classNames\");\n      }\n    }\n  });\n\n  context.subscriptions.push(disposable);\n}\n\n\n\nexports.activate = activate;\n\n// this method is called when your extension is deactivated\nfunction deactivate() { }\n\nmodule.exports = {\n  activate,\n  deactivate\n}\n","function oneObject(str) {\n  var obj = {}\n  str.split(\",\").forEach(_ => obj[_] = true)\n  return obj\n}\nvar voidTag = oneObject(\"area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr\")\nvar specalTag = oneObject('xmp,style,script,noscript,textarea,template,#comment')\n\nvar hiddenTag = oneObject('style,script,noscript,template')\n\nvar JSXParser = function(a, f) {\n  if (!(this instanceof JSXParser)) {\n      return parse(a, f)\n  }\n  this.input = a\n  this.getOne = f\n}\n\nJSXParser.prototype = {\n  parse: function() {\n      return parse(this.input, this.getOne)\n  }\n}\nvar rsp = /\\s/\n  /**\n   * \n   * \n   * @param {any} string \n   * @param {any} getOne 只返回一个节点\n   * @returns \n   */\nfunction parse(string, getOne) {\n  getOne = (getOne === void 666 || getOne === true)\n  var ret = lexer(string, getOne)\n  if (getOne) {\n      return typeof ret[0] === 'string' ? ret[1] : ret[0]\n  }\n  return ret\n}\n\nfunction lexer(string, getOne) {\n  var tokens = []\n  var breakIndex = 120\n  var stack = []\n  var origString = string\n  var origLength = string.length\n\n  stack.last = function() {\n      return stack[stack.length - 1]\n  }\n  var ret = []\n\n  function addNode(node) {\n      var p = stack.last()\n      if (p && p.children) {\n          p.children.push(node)\n      } else {\n          ret.push(node)\n      }\n  }\n\n  var lastNode\n  do {\n      if (--breakIndex === 0) {\n          break\n      }\n      var arr = getCloseTag(string)\n\n      if (arr) { //处理关闭标签\n          string = string.replace(arr[0], '')\n          const node = stack.pop()\n              //处理下面两种特殊情况：\n              //1. option会自动移除元素节点，将它们的nodeValue组成新的文本节点\n              //2. table会将没有被thead, tbody, tfoot包起来的tr或文本节点，收集到一个新的tbody元素中\n          if (node.type === 'option') {\n              node.children = [{\n                  type: '#text',\n                  nodeValue: getText(node)\n              }]\n          } else if (node.type === 'table') {\n              insertTbody(node.children)\n          }\n          lastNode = null\n          if (getOne && ret.length === 1 && !stack.length) {\n              return [origString.slice(0, origLength - string.length), ret[0]]\n          }\n          continue\n      }\n\n      var arr = getOpenTag(string)\n      if (arr) {\n          string = string.replace(arr[0], '')\n          var node = arr[1]\n          addNode(node)\n          var selfClose = !!(node.isVoidTag || specalTag[node.type])\n          if (!selfClose) { //放到这里可以添加孩子\n              stack.push(node)\n          }\n          if (getOne && selfClose && !stack.length) {\n              return [origString.slice(0, origLength - string.length), node]\n          }\n          lastNode = node\n          continue\n      }\n\n      var text = ''\n      do {\n          //处理<div><<<<<<div>的情况\n          const index = string.indexOf('<')\n          if (index === 0) {\n              text += string.slice(0, 1)\n              string = string.slice(1)\n\n          } else {\n              break\n          }\n      } while (string.length);\n      //处理<div>{aaa}</div>,<div>xxx{aaa}xxx</div>,<div>xxx</div>{aaa}sss的情况\n      const index = string.indexOf('<') //判定它后面是否存在标签\n      const bindex = string.indexOf('{') //判定它后面是否存在jsx\n      const aindex = string.indexOf('}')\n\n      let hasJSX = (bindex < aindex) && (index === -1 || bindex < index)\n      if (hasJSX) {\n          if (bindex !== 0) { // 收集jsx之前的文本节点\n              text += string.slice(0, bindex)\n              string = string.slice(bindex)\n          }\n          addText(lastNode, text, addNode)\n          string = string.slice(1) //去掉前面{\n          var arr = parseCode(string)\n          addNode(makeJSX(arr[1]))\n          lastNode = false\n          string = string.slice(arr[0].length + 1) //去掉后面的}\n      } else {\n          if (index === -1) {\n              text = string\n              string = ''\n          } else {\n              text += string.slice(0, index)\n              string = string.slice(index)\n          }\n          addText(lastNode, text, addNode)\n      }\n\n  } while (string.length);\n  return ret\n}\n\nfunction addText(lastNode, text, addNode) {\n  if (/\\S/.test(text)) {\n      if (lastNode && lastNode.type === '#text') {\n          lastNode.text += text\n      } else {\n          lastNode = {\n              type: '#text',\n              nodeValue: text\n          }\n          addNode(lastNode)\n      }\n  }\n}\n\n//它用于解析{}中的内容，如果遇到不匹配的}则返回, 根据标签切割里面的内容 \nfunction parseCode(string) { // <div id={ function(){<div/>} }>\n  var word = '', //用于匹配前面的单词\n      braceIndex = 1,\n      codeIndex = 0,\n      nodes = [],\n      quote,\n      escape = false,\n      state = 'code'\n  for (var i = 0, n = string.length; i < n; i++) {\n      var c = string.charAt(i),\n          next = string.charAt(i + 1)\n      switch (state) {\n          case 'code':\n              if (c === '\"' || c === \"'\") {\n                  state = 'string'\n                  quote = c\n              } else if (c === '{') {\n                  braceIndex++\n              } else if (c === '}') {\n                  braceIndex--\n                  if (braceIndex === 0) {\n                      collectJSX(string, codeIndex, i, nodes)\n                      return [string.slice(0, i), nodes]\n                  }\n              } else if (c === '<') {\n                  var word = '',\n                      empty = true ,\n                      index = i - 1\n                  do {\n                      c = string.charAt(index)\n                      if (empty && rsp.test(c)) {\n                          continue\n                      }\n                      if (rsp.test(c)) {\n                          break\n                      }\n                      empty = false\n                      word = c + word\n                      if (word.length > 7) { //性能优化\n                          break\n                      }\n                  } while (--index >= 0);\n                  var chunkString = string.slice(i)\n                  if (word === '' || /(=>|return|\\{|\\(|\\[|\\,)$/.test(word) && /\\<\\w/.test(chunkString)) {\n                      collectJSX(string, codeIndex, i, nodes)\n                      var chunk = lexer(chunkString, true)\n                      nodes.push(chunk[1])\n                      i += (chunk[0].length - 1) //因为已经包含了<, 需要减1\n                      codeIndex = i + 1\n                  }\n\n              }\n              break\n          case 'string':\n              if (c == '\\\\' && (next === '\"' || next === \"'\")) {\n                  escape = !escape\n              } else if (c === quote && !escape) {\n                  state = 'code'\n              }\n              break\n      }\n\n  }\n}\n\nfunction collectJSX(string, codeIndex, i, nodes) {\n  var nodeValue = string.slice(codeIndex, i)\n  if (/\\S/.test(nodeValue)) { //将{前面的东西放进去\n      nodes.push({\n          type: '#jsx',\n          nodeValue: nodeValue\n      })\n  }\n}\n\nvar rtbody = /^(tbody|thead|tfoot)$/\n\nfunction insertTbody(nodes) {\n  var tbody = false\n  for (var i = 0, n = nodes.length; i < n; i++) {\n      var node = nodes[i]\n      if (rtbody.test(node.nodeName)) {\n          tbody = false\n          continue\n      }\n\n      if (node.nodeName === 'tr') {\n          if (tbody) {\n              nodes.splice(i, 1)\n              tbody.children.push(node)\n              n--\n              i--\n          } else {\n              tbody = {\n                  nodeName: 'tbody',\n                  props: {},\n                  children: [node]\n              }\n              nodes.splice(i, 1, tbody)\n          }\n      } else {\n          if (tbody) {\n              nodes.splice(i, 1)\n              tbody.children.push(node)\n              n--\n              i--\n          }\n      }\n  }\n}\n\n\nfunction getCloseTag(string) {\n  if (string.indexOf(\"</\") === 0) {\n      var match = string.match(/\\<\\/(\\w+)>/)\n      if (match) {\n          var tag = match[1]\n          string = string.slice(3 + tag.length)\n          return [match[0], {\n              type: tag\n          }]\n      }\n  }\n  return null\n}\n\nfunction getOpenTag(string) {\n  if (string.indexOf(\"<\") === 0) {\n      var i = string.indexOf('<!--') //处理注释节点\n      if (i === 0) {\n          var l = string.indexOf('-->')\n          if (l === -1) {\n              thow('注释节点没有闭合 ' + string.slice(0, 100))\n          }\n          var node = {\n              type: '#comment',\n              nodeValue: string.slice(4, l)\n          }\n\n          return [string.slice(0, l + 3), node]\n      }\n      var match = string.match(/\\<(\\w[^\\s\\/\\>]*)/) //处理元素节点\n      if (match) {\n          var leftContent = match[0],\n              tag = match[1]\n          var node = {\n              type: tag,\n              props: {},\n              children: []\n          }\n\n          string = string.replace(leftContent, '') //去掉标签名(rightContent)\n          var arr = getAttrs(string) //处理属性\n          if (arr) {\n              node.props = arr[1]\n              string = string.replace(arr[0], '')\n              leftContent += arr[0]\n          }\n\n          if (string[0] === '>') { //处理开标签的边界符\n              leftContent += '>'\n              string = string.slice(1)\n              if (voidTag[node.type]) {\n                  node.isVoidTag = true\n              }\n          } else if (string.slice(0, 2) === '/>') { //处理开标签的边界符\n              leftContent += '/>'\n              string = string.slice(2)\n              node.isVoidTag = true\n          } \n\n          if (!node.isVoidTag && specalTag[tag]) { //如果是script, style, xmp等元素\n              var closeTag = '</' + tag + '>'\n              var j = string.indexOf(closeTag)\n              var nodeValue = string.slice(0, j)\n              leftContent += nodeValue + closeTag\n              node.children.push({\n                  type: '#text',\n                  nodeValue: nodeValue\n              })\n          }\n\n          return [leftContent, node]\n      }\n  }\n}\n\nfunction getText(node) {\n  var ret = ''\n  node.children.forEach(function(el) {\n      if (el.type === '#text') {\n          ret += el.nodeValue\n      } else if (el.children && !hiddenTag[el.type]) {\n          ret += getText(el)\n      }\n  })\n  return ret\n}\n\nfunction getAttrs(string) {\n  var state = 'AttrNameOrJSX',\n      attrName = '',\n      attrValue = '',\n      quote,\n      escape,\n      props = {}\n\n  for (var i = 0, n = string.length; i < n; i++) {\n      var c = string[i]\n      switch (state) {\n          case 'AttrNameOrJSX':\n              if (c === '/' || c === '>') {\n                  return [string.slice(0, i), props]\n              }\n              if (rsp.test(c)) {\n                  if (attrName) {\n                      state = 'AttrEqual'\n                  }\n              } else if (c === '=') {\n                  if (!attrName) {\n                      throw '必须指定属性名'\n                  }\n                  state = 'AttrQuoteOrJSX'\n              } else if (c === '{') {\n                  state = 'SpreadJSX'\n              } else {\n                  attrName += c\n              }\n              break\n          case 'AttrEqual':\n              if (c === '=') {\n                  state = 'AttrQuoteOrJSX'\n              }\n              break\n          case 'AttrQuoteOrJSX':\n              if (c === '\"' || c === \"'\") {\n                  quote = c\n                  state = 'AttrValue'\n                  escape = false\n              } else if (c === '{') {\n                  state = 'JSX'\n              }\n              break\n          case 'AttrValue':\n              if (c === '\\\\') {\n                  escape = !escape\n              }\n              if (c !== quote) {\n                  attrValue += c\n              } else if (c === quote && !escape) {\n                  props[attrName] = attrValue\n                  attrName = attrValue = ''\n                  state = 'AttrNameOrJSX'\n              }\n              break\n          case 'SpreadJSX':\n              i += 3\n          case 'JSX':\n\n              var arr = parseCode(string.slice(i))\n              i += arr[0].length\n\n              props[state === 'SpreadJSX' ? 'spreadAttribute' : attrName] = makeJSX(arr[1])\n              attrName = attrValue = ''\n              state = 'AttrNameOrJSX'\n              break\n      }\n  }\n  throw '必须关闭标签'\n}\n\nfunction makeJSX(JSXNode) {\n  return JSXNode.length === 1 && JSXNode[0].type === '#jsx' ? JSXNode[0] : { type: '#jsx', nodeValue: JSXNode }\n}\n\nmodule.exports = {\n  JSXParser\n}","const vscode = require('vscode');\nconst copyPaste = require(\"copy-paste\");\n\n\nlet {\n  JSXParser\n} = require(\"./jsxParser\");\n\n\n// 获取当前选中的文本\nfunction getSelectedText() {\n  const editor = vscode.window.activeTextEditor;\n  console.log(editor.document);\n  let doc = editor.document.getText();\n  let arr = doc.split(\"\\n\");\n  let {\n    start,\n    end\n  } = editor.selection;\n  let str = \"\";\n  for (let i = start.line; i <= end.line; ++i) {\n    if (i === start.line) {\n      str += arr[i].slice(start.character);\n    } else if (i === end.line) {\n      str += arr[i].slice(0, end.character);\n    } else {\n      str += arr[i];\n    }\n  }\n  return str;\n}\n\n// 提取样式\nfunction extractStyle(text = \"\") {\n  let obj = JSXParser(text);\n  if (!obj) {\n    vscode.window.showErrorMessage(\"Please check your JSX syntax\");\n    return false;\n  } else {\n    return generateSass(obj);\n  }\n}\n\n/*\n  {\n    type: \"div\",\n    props: {\n      className: \"abc\",\n      id: \"demo\"\n    },\n    children: [\n\n    ]\n  }\n*/\nconst DEFAULT_SPACE_COUNT = 2;  // 默认缩进为2个空格\nfunction generateSass(obj, spaceCount = 0) {\n  let result = \"\";\n  let {\n    props,\n    children\n  } = obj;\n  if(!props || !children) {\n    return \"\";\n  }\n\n  if (props.className) {\n    let classNames = props.className.trim().split(\" \");\n    result += generateWhiteSpace(spaceCount);\n    let arr = [];\n    for (let item of classNames) {\n      if (!item) continue;\n      arr.push(`.${item}`)\n    }\n    result += arr.join(\", \") + \" {\\n\";\n  }\n\n  if (children.length) {\n    let prefix = \"\";\n    let count = props.className ? DEFAULT_SPACE_COUNT : 0;\n    for (let [index, item] of children.entries()) {\n      prefix = (index === 0 || !item.props.className) ? \"\" : \"\\n\";\n      result += prefix + generateSass(item, spaceCount + count);\n    }\n  }\n\n  if(props.className) {\n    result += \"\\n\" + generateWhiteSpace(spaceCount) + \"}\"\n  }\n\n  return result;\n}\n\n// 生成指定数量的空格\nfunction generateWhiteSpace(cnt) {\n  let result = \"\";\n  for (let i = 0; i < cnt; ++i) {\n    result += \" \";\n  }\n  return result;\n}\n\n\n// 写入剪贴板\nfunction writeToClipboard(text) {\n  copyPaste.copy(text, () => {\n    vscode.window.showInformationMessage(\"Scss copys to clipboard successfully!\");\n  });\n}\n\n\nmodule.exports = {\n  getSelectedText,\n  extractStyle,\n  writeToClipboard,\n}","module.exports = require(\"buffer\");;","module.exports = require(\"child_process\");;","module.exports = require(\"fs\");;","module.exports = require(\"path\");;","module.exports = require(\"stream\");;","module.exports = require(\"string_decoder\");;","module.exports = require(\"util\");;","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(474);\n"],"sourceRoot":""}